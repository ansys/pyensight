# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  style:
    name: Style check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        run: |
          pre-commit run --verbose --all-files || ( git status --short ; git diff ; exit 1 )

  smoketest:
    name: Smoke test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build requirements
        run: pip install -r requirements/build.txt

      - name: Create wheel
        run: make build

      - name: Install pyensight
        run: make install

      - name: Test import
        run: make smoketest
  main:
    name: Build & test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install build requirements
        run: pip install -r requirements/build.txt

      - name: Create wheel
        run: make build

      - name: Validate wheel
        run: twine check dist/*

      - name: Install pyensight
        run: make install

      - name: Install test requirements
        run: pip install -r requirements/test.txt

      - name: Unit testing
        run: |
          cd tests  # so we're testing the install, not local
          pytest -vx

      - name: Upload wheel
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: ansys-product-library-wheel
          path: dist/
          retention-days: 7
  docs:
    name: Build docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install doc requirements
        run: pip install -r requirements/docs.txt

      - name: Build HTML
        run: |
          make -C doc html SPHINXOPTS="-W"
          touch doc/build/html/.nojekyll

      - name: Upload HTML Documentation
        if: ${{ !env.ACT }} && github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

      - name: Deploy
        if: ${{ !env.ACT }} && github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@4.2.0
        with:
          repository-name: pyansys/pyensight-dev-docs
          token: ${{ secrets.PAT_DOCS_DEPLOY }}
          branch: gh-pages
          folder: doc/build/html
          clean: true
  release:
    name: Release
    if: contains(github.ref, 'refs/tags')
    needs: [ main, style, docs ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ansys-product-library-wheel

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html

      # list current directory
      - name: List directory structure
        run: ls -R

      - name: Deploy
        if: ${{ !env.ACT }}
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          BRANCH: gh-pages
          FOLDER: ~/html
          CLEAN: true

      # note how we use the PyPI tokens
      - name: Upload to Azure PyPi (disabled)
        if: ${{ !env.ACT }}
        run: |
          pip install twine
          # twine upload --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
