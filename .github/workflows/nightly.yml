name: Nightly Build

on:
  schedule:  # UTC at 0300 - 11pm EDT
    - cron:  '0 3 * * *'
  workflow_dispatch:

jobs:
  smoketest:
    name: Smoke test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [ '3.9', '3.10', '3.11' ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'refs/heads/main'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build requirements
        run: pip install -r requirements/build.txt

      - name: Create wheel
        run: make build

      - name: Install pyensight
        run: make install

      - name: Test import
        run: make smoketest

  nightly:
    name: Nightly build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/checkout@v3
        with:
          ref: 'refs/heads/main'

      - name: Install build requirements
        run: pip install -r requirements/build.txt

      - name: Create wheel
        run: make build-nightly

      - name: Validate wheel
        run: twine check dist/*

      - name: Install pyensight
        run: make install

      - name: Install test requirements
        run: pip install -r requirements/test.txt

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker
        run: make pull-docker

      - name: Unit testing
        run: |
          make test
        env:
          ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}

      - name: Upload coverage report
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: coverage-html/
          retention-days: 7
          if-no-files-found: error

      - name: Upload to Ansys Azure PyPi
        if: ${{ !env.ACT }}
        run: twine upload --verbose dist/*
        env:
          TWINE_USERNAME: PAT
          TWINE_PASSWORD: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload

  build-failure:
    name: Teams notify on failure
    if: failure()
    needs: [ nightly ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Microsoft Teams Notification
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: Nightly build failure
          notification-color: dc3545
          timezone: America/New_York
