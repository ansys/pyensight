<docstrings>
<override namespace="ensight.file.animation_file">
<description>
Specify the name of the animation file when recording.

Args:
    p0:
        &#x27;filename&#x27; the filename to use for the animation

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_frames">
<description>
Specify the number of frames to save when recording an animation.

Args:
    p0:
        &#x27;number_of&#x27; number of frames to save

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_multiple_images">
<description>
Specify whether to save multiple images when recording an animation (if you are displaying on multiple detached displays).

| You will need to have specified multiple detached displays in order for this command to have any effect.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_play_flipbook">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_play_time">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_reset_flipbook">
<description>
Specify whether to reset the flipbook as the animation is saved.

| None.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_reset_time">
<description>
Specify whether to reset the solution time as the animation is saved.

| None.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_reset_traces">
<description>
Specify whether to reset the animated particle traces as the animation is saved.

| None.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_window_size">
<description>
Specify type (and thus in most cases the size) of the animation window to save when recording.

| None.

Args:
    p0:
        &#x27;type&#x27;

        * normal
        * full
        * detached display
        * user_defined
        * NTSC
        * PAL
        * HD720p
        * HD1080p
        * DVDNTSC
        * DVDPAL

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;NTSC&quot;)
    | ensight.file.animation_window_xy(640,480)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.animation_window_xy">
<description>
Specify resolution of the animation window to save - when using user_defined type.

| Applicable only if file: animation_window_size is set to user_defined.

Args:
    p0:
        &#x27;xres&#x27; window x resolution
    p1:
        &#x27;yres&#x27; window y resolution 

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.animation_file(&quot;/tmp/test_animation&quot;)
    | ensight.file.animation_window_size(&quot;user_defined&quot;)
    | ensight.file.animation_window_xy(400,300)
    | ensight.file.animation_frames(20)
    | ensight.file.animation_multiple_images(&quot;OFF&quot;)
    | ensight.file.animation_reset_flipbook(&quot;ON&quot;)
    | ensight.file.animation_reset_traces(&quot;OFF&quot;)
    | ensight.file.animation_reset_time(&quot;ON&quot;)
    | ensight.file.save_animation()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_color_type">
<description>
Specify that the image will be printed in color or black and white

| All formats support this parameter except TIFF and EnVideo

Args:
    p0:
        &#x27;color_type&#x27;

        * color
        * black&amp;white

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_color_type(&quot;black&amp;white&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_convert">
<description>
Change black backgrounds to white and change any white objects (geometry, plotters, annotations, etc.) to black.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON 
        * OFF

Examples:
    | ensight.file.image_format(&quot;sgi_rgb&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_convert(&quot;ON&quot;)
    | ensight.file.save_image()
    | ensight.file.image_convert(&quot;OFF&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_encapsulated">
<description>
Turn on/off encapsulation for postscript output

| Encapsulation should only be used when the resulting image file will be used as part of another document.  Printers do not normally interpret encapsulated image files. 

Args:
    p0:
        &#x27;toggle&#x27;

        * ON 
        * OFF

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_color_type(&quot;black&amp;white&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_orientation(&quot;landscape&quot;)
    | ensight.file.image_encapsulated(&quot;ON&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_envideo_type">
<description>
Set the envideo format compression scheme.

| rle is a lossless compression scheme, though it produces larger files than jpeg.  If the compression scheme is jpeg, &quot;file: image_quality&quot; controls the jpeg compression/quality.

Args:
    p0:
        &#x27;compression_type&#x27;

        * rle 
        * jpeg 

Examples:
    | ensight.file.image_format(&quot;envideo&quot;)
    | ensight.file.image_envideo_type(&quot;jpeg&quot;)
    | ensight.file.image_quality(80)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_file">
<description>
Specify the filename to be used for image printing.

| Must be specified before a &quot;file: save_image&quot; if &quot;file: image_to_file&quot; is ON.

Args:
    p0:
        &#x27;filename&#x27; name of the image file to be saved

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_format">
<description>
Specifies the file format to be used when an image is created.

| If the image is saved to a disk file the filename is concatenated with an extension as follows:
| bmp - .bmp							gif - .gif
| jpeg -.jpg							mov - .mov
| tiff -.tif							envideo -.evo
| png - .png							mpeg -.mpg
| postscript -.ps							avi - .avi
| encapsulated ps -.eps							POVRAY -.pov &amp; .inc  (requires gold license)
| sgi -.rgb							

Args:
    p0:
        &#x27;image_format&#x27;

        * The image format which must be one of:
        * bmp
        * jpeg
        * tiff
        * png
        * postscript
        * sgi
        * evo
        * evo
        * mpeg
        * gif
        * mov
        * avi
        * POVRAY

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_format_options">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_frame_rate">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_gamma">
<description>
Set gamma correction value for PCL image files.

| Gamma corrects for monitor/printer non-linearities for color saturation/brightness.For example, without gamma correction, a full intensity red pixel will not be twice as bright as a half intensity pixel.  1.0 is the default and is used if not specified.

Args:
    p0:
        &#x27;gamma_value&#x27; The range is dependent on the system.  Typically values are on the order 1&lt;= gamma_value &lt;=3.

Examples:
    | ensight.file.image_format(&quot;pcl&quot;)
    | ensight.file.image_gamma(1.7)
    | ensight.file.image_printer_model(&quot;DeskJet_1200c&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_numpasses">
<description>
Specify the number of rendering passes for anti-aliasing.  The higher the number of rendering passes the better the anti-aliasing but the longer it will take to render.  This parameter is independent of any possible anti-aliasing settings for the hardware, i.e., if the hardware is set for 4x antialiasing and this parameter is set to 2 you will still render two passes, each pass with 4x antialiasing.

| There is no guarantee that if an image is rendered to an offscreen buffer that this buffer have the same hardware antialiasing depth available as the main graphics window.

Args:
    p0:
        &#x27;value&#x27; The number of rendering passes

Examples:
    | ensight.file.image_numpasses(4)
    | ensight.file.image_stereo(&quot;current&quot;)
    | ensight.file.image_format(&quot;evo&quot;)
    | ensight.file.image_file(&quot;/tmp/abc&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_orientation">
<description>
Sets the image orientation for PCL and Postscript image formats

| &quot;portrait&quot; is used if not specified.

Args:
    p0:
        &#x27;orientation&#x27;

        * portrait
        * landscape

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_color_type(&quot;black&amp;white&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_orientation(&quot;landscape&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_plot_only">
<description>
When printing an image will turn invisible everything except for plotters.

| If turned ON, should be turned OFF after a &quot;file: save_image&quot;

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF 

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_quality(80)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_plot_only(&quot;ON&quot;)
    | ensight.file.save_image()
    | ensight.file.image_plot_only(&quot;OFF&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_postscript_cull">
<description>
For postscript format move-draw images turns on/off the removal of hidden geometry.

| Culling hidden geometry can vastly improve printer performance and reduce file size.  However, processing time is significantly higher.
| When OFF the geometry will be drawn from back to front.
| The default is ON.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_postscript_type(&quot;move_draw&quot;)
    | ensight.file.image_postscript_cull(&quot;OFF&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_postscript_prev">
<description>
Include a windows preview image in an encapsulated postscript (eps) file.

| If a preview image is not included a EPS file will be shown as a grey rectangle in Windows applications.  Many applications which can normally read a EPS file will not be able to read one which includes a windows preview image.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_encapsulated(&quot;ON&quot;)
    | ensight.file.image_postscript_prev(&quot;ON&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_postscript_subd">
<description>
For postscript format move-draw images turns on/off the subdivision of polygons for better shading.

| The postscript format supports only a single color per polygon. Lighting and false color mapping will look poor unless the polygon is subdivided into smaller (single color) regions.  The default is ON.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_postscript_type(&quot;move_draw&quot;)
    | ensight.file.image_postscript_subd(&quot;ON&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_postscript_type">
<description>
Set the postscript output to move-draw or bitmap.

Args:
    p0:
        &#x27;ps_type&#x27;

        * move_draw
        * image_pixels

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_postscript_type(&quot;image_pixels&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_printer_command">
<description>
Specify the printer command to use when printing an image to a printer

| You can print an image straight to a printer only if the printer can properly interpret the image file.  Many printers will, for example, properly print a postscript file.  Printing a PICT file, however, will usually result in multiple pages of non-printable characters.

Args:
    p0:
        &#x27;command&#x27; printer command used to print the image

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_to_file(&quot;OFF&quot;)
    | ensight.file.image_to_printer(&quot;ON&quot;)
    | ensight.file.image_printer_command(&quot;lpr -Pcolor&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_printer_model">
<description>
Set the target printer for a PCL image file.

Args:
    p0:
        &#x27;printer&#x27;

        * One of:
        * LaserJet
        * LaserJet_+
        * LaserJet_500+
        * Laser Jet_II
        * LaserJet_IIp
        * LaserJet_III
        * LaserJet_4
        * LaserJet_4L
        * DeskJet_500
        * DeskJet_500c
        * DeskJet_550
        * DeskJet_550c
        * DeskJet_1200c

Examples:
    | ensight.file.image_format(&quot;pcl&quot;)
    | ensight.file.image_printer_model(&quot;DeskJet_1200c&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_quality">
<description>
Sets the quality for JPEG images.

| JPEG is a lossy format, i.e., it trades off file size for quality. Normally a quality factor of around 80 will produce a file that will be on order 2X smaller than one produced with a quality factor set to 100 with negligible impact on quality. JPEG format is best used with shaded images

Args:
    p0:
        &#x27;quality&#x27; 0 &lt;= quality &lt;= 100
    p1:
        &#x27;quality&#x27; 100 is the highest quality (no compression)
    p2:
        &#x27;quality&#x27; 0 is the lowest quality (highest compression)

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_quality(80)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_saturation">
<description>
Desaturate color when saving an image to disk or printer.

| Desaturating images is especially useful when saving images to a format which will be played back on a television monitor as fully saturated colors have a tendency to &quot;bleed&quot;. 1.0 is the default and is used if not specified.

Args:
    p0:
        &#x27;sat_value&#x27; A value from 0 (black and white) to 1 (full color saturation)

Examples:
    | ensight.file.image_format(&quot;sgi_rgb&quot;)
    | ensight.file.image_saturation(0.8)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_scale_factor">
<description>
To scale a postscript image for the page size.

Args:
    p0:
        &#x27;scale_value&#x27; a value from 0 to 1 specifying portion of the page to use for printing

Examples:
    | ensight.file.image_format(&quot;postscript&quot;)
    | ensight.file.image_color_type(&quot;black&amp;white&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.image_orientation(&quot;landscape&quot;)
    | ensight.file.image_scale_factor(.5)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_screen_tiling">
<description>
Create a multi-tile image suitable for display via EnVideo to a multi-tile (i.e., powerwall) display device.

| The total resolution is controlled via the image_window_xy command.  The resolution for each of the tiles is x/y resolution devided by the x_tiles/y_tiles parameter.  

Args:
    p0:
        &#x27;x_tiles&#x27; number of tiles in the x direction 
    p1:
        &#x27;y_tiles&#x27; number of tiles in the y direction

Examples:
    | ensight.file.image_numpasses(4)
    | ensight.file.image_window_xy(3840,2048)
    | ensight.file.image_screen_tiling(3,2)
    | ensight.file.image_format(&quot;evo&quot;)
    | ensight.file.image_file(&quot;/tmp/abc&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_stereo">
<description>
Set stereo/mono output for the image file.

Args:
    p0:
        &#x27;type&#x27;

        * current
        * mono
        * interleaved
        * redblue
        * bluered
        * redcyan
        * cyanred

Examples:
    | ensight.file.image_numpasses(4)
    | ensight.file.image_stereo(&quot;redblue&quot;)
    | ensight.file.image_format(&quot;evo&quot;)
    | ensight.file.image_file(&quot;/tmp/abc&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_to_file">
<description>
Specifies if the image should be saved to a disk file.

| If flag is set to OFF, the other choice, printing the image directly to a printer should be specified.  If ON the &quot;file: image_file&quot; command should be specified.  The default is ON, i.e., this command does not have to be specified if printing an image to a file.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON  
        * OFF

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_to_file(&quot;ON&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_to_printer">
<description>
Specifies if the image should be printed directly to a printer.

| If flag is set to OFF, the other choice, printing the image to a disk file should be specified.  If ON, the &quot;file: image_printer_command&quot; should be specified.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON  
        * OFF

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_to_file(&quot;OFF&quot;)
    | ensight.file.image_to_printer(&quot;ON&quot;)
    | ensight.file.image_printer_command(&quot;lpr -Pprinter&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_window_size">
<description>
When printing image based images sets the window (and thus image) size.

| When an image is saved a new window will be created of the size specified.  The default is normal.

Args:
    p0:
        &#x27;window_sz&#x27;

        * normal
        * full
        * User_defined
        * detached_display
        * NTSC
        * PAL
        * HD720p
        * HD1080p
        * DVDNTSC
        * DVDPAL

Examples:
    | ensight.file.image_format(&quot;sgi_rgb&quot;)
    | ensight.file.image_window_size(&quot;full&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.image_window_xy">
<description>
Sets the image width and height if the user has specified a user_defined image size.

| For interactive processing width and height are limited to the size of the managed display area. For batch rendering width and height are limited to 15360 x 4096.
| If the aspect ratio of EnSight&#x27;s graphics area does not match the specified values the resulting image will not match what is currently displayed. To avoid this problem the specified aspect ratio (width/height) must match what is currently in use.  To find the currently in use values enter &quot;test: size_of_window&quot; in the command dialog.  The currently in use values will be printed in the EnSight shell window.

Args:
    p0:
        &#x27;width&#x27; pixels in x direction
    p1:
        &#x27;height&#x27; pixels in y direction

Examples:
    | ensight.file.image_format(&quot;sgi_rgb&quot;)
    | ensight.file.image_window_size(&quot;user_defined&quot;)
    | ensight.file.image_window_xy(800,600)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.restore_context">
<description>
Restore a context file.

| If a context file is restored before data is read the data used to create the context file is also restored together with the parts that existed at the time the context file was saved.
| If a context file is restored after data is read but before parts are created the same parts that existed in the context file will be restored.
| If a context file is restored after data and parts have been loaded, the context content is applied towards the loaded parts.  In this case the part names must match.  If part names do not match the user must manually match up the parts via a pop-up dialog.

Args:
    p0:
        &#x27;filename&#x27; name of the context file to restore

Examples:
    | ensight.file.restore_context(&quot;/tmp/test.ctx&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.restore_full_backup">
<description>
Restore an EnSight archive (restart) file.

| The file specified must be located on the EnSight client machine.
| The file specified contains the file names of the archive files for both the client and server machines.
| When an EnSight archive file is restored, the EnSight command file used to generate the archive file is also restored.  The command file is named ensig********.restore and is usually located in /usr/tmp (UNIX) or the user&#x27;s home directory (windows).  The restored command file contains the commands from the last EnSight session.  In the case where the session was started with an archive restore, the command file will not be complete.
| Archive files are usually not compatible between major EnSight releases and are usually not portable between machines.  Should the restore of an archive fail, the user should consider using the command file mentioned above.

Args:
    p0:
        &#x27;filename&#x27; name of the EnSight archive file

Examples:
    | ensight.file.restore_full_backup(&quot;/tmp/test.ar&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_animation">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_context">
<description>
Save a context file.

| A context file provides a data independent way to apply a visualization to a new dataset. 
| The context file consists, at minimum, of a file containing the commands to recreate the visuals on the screen that existed at the time the context was saved. 
| The filename is used as a root name as multiple files are saved including the palette, view, and keyframe animation state. 
| Context files are not portable between big/little endian machines at this time.

Args:
    p0:
        &#x27;filename&#x27; name of the context file

Examples:
    | ensight.file.save_context(&quot;/tmp/test.ctx&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_context_type">
<description>
Can specify the desired case to use, or all cases, when saving a context file. 

Args:
    p0:
        &#x27;all_cases&#x27; A context file will be saved for each case
    p1:
        &#x27;current_case&#x27; A context file will be saved for the current case

Examples:
    | ensight.file.save_context_type(&quot;all_cases&quot;)
    | ensight.file.save_context(&quot;myfile.ctx&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_full_backup">
<description>
Create an EnSight archive (restart) file.

| Three files are actually written.  The file name specified contains the name of the other two files and is written on the EnSight client machine. Besides the file specified, one file is written on the EnSight client and server machines containing the archive information.  
| Archive files are usually not compatible between major EnSight releases and are usually not portable between machines.

Args:
    p0:
        &#x27;filename&#x27; name of the EnSight archive file

Examples:
    | ensight.file.save_full_backup(&quot;/tmp/test.ar&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_image">
<description>
Save an image to a disk file.

| Need to have specified the image file with the file: image_file &lt;filename&gt; command before invoking this command.

Examples:
    | ensight.file.image_format(&quot;jpeg&quot;)
    | ensight.file.image_file(&quot;/tmp/test_image&quot;)
    | ensight.file.save_image()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_multiple_images">
<description>
Option to save a single image or multiple images for a flat-wall detached display.

| When saving a flat-wall detached display, the user can choose to write one large image for the wall or one image per ��pipe�� from the dconfig file.  This option is only valid when the image size is detached_display.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.image_window_size(&quot;detached_display&quot;)
    | ensight.file.save_multiple_images(&quot;ON&quot;)
    | ensight.file.image_file(&quot;prefix&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_file">
<description>
Save a scenario file using all parts.

| A scenario can be restored in EnLiten.
| A scenario file contains information to completely restore the current visuals in EnLiten.
| A scenario project contains additional information.

Args:
    p0:
        &#x27;filename&#x27; name of the file to use for the scenario information

Examples:
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario_file&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_fileslct">
<description>
Save a scenario file using selected parts only.

| A scenario can be restored in EnLiten.
| A scenario file contains information to completely restore the current visuals in EnLiten.
| A scenario project contains additional information.

Args:
    p0:
        &#x27;filename&#x27; name of the file to use for the scenario information

Examples:
    | ensight.sendmesgoptions(version=&quot;8.23&quot;)
    | ensight.part.select_all()
    | ensight.file.scenario_format(&quot;enliten2&quot;)


Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_png_file">
<description>
Creates an executable by name of &lt;pathname&gt; containing the CEI application Reveal along with the currently specified scenario file.  The executable is for the architecture specified by the &#x27;file: save_scenario_png_format&#x27; command.

| Commands associated with this command are:
| file: save_scenario_png_format and 
| file: save_scenario_fileslct.

Args:
    p0:
        &#x27;pathname&#x27; executable file name

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_png_format">
<description>
Specifies the architecture for the &#x27;file: save_scenario_png_format&#x27; command.  The architecture name depends upon which Reveal executables are installed on the computer running EnSight.  Architecture names match the subdirectory names found in $CEI_HOME/reveal21/machines/

| Commands associated with this command are:
| file: save_scenario_png_file and 
| file: save_scenario_fileslct.

Args:
    p0:
        &#x27;arch&#x27; architecture name

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_project">
<description>
Save a scenario project using all parts.

| A scenario can be restored in EnLiten.  
| A scenario file contains information to completely restore the current visuals in EnLiten.  
| A scenario project contains a scenario file plus (a) a JPEG image file of what the project looks like, (b) a file containing the scenario description, and (c) an EnSight context file (can be multiple files). 
| The scenario file and associated project files will be named using the directory_name as the root filename.

Args:
    p0:
        &#x27;directory_name&#x27; name of the directory to save the scenario information

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_projslct">
<description>
Save a scenario project using selected parts only.

| A scenario can be restored in EnLiten.  
| A scenario file contains information to completely restore the current visuals in EnLiten.  
| A scenario project contains a scenario file plus (a) a JPEG image file of what the project looks like, (b) a file containing the scenario description, and (c) an EnSight context file (can be multiple files). 
| The scenario file and associated project files will be named using the directory_name as the root filename.

Args:
    p0:
        &#x27;directory_name&#x27; name of the directory to save the scenario information

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_view">
<description>
Save a view as part of an existing scenario file.

Args:
    p0:
        &#x27;filename&#x27; name of the existing scenario file
    p1:
        &#x27;viewname&#x27; a description for the view

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.save_scenario_which_parts">
<description>
Save a view as part of an existing scenario file.

| The following command is closely related:
| file: save_scenario_fileslct

Args:
    p0:
        &#x27;option&#x27; all, visible, or selected

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_desc_begin">
<description>
Delimit the description for a scenario project.

| A scenario project contains descriptions of the project suitable for inclusion in HTML documents.

Examples:
    | # WARNING: following line includes OBSOLETE call (ensight.variables.select_varname_begin).
    | ensight.variables.select_varname_begin(&quot;pressure&quot;,&quot;velocity&quot;,&quot;variables: select_varname_end&quot;,&quot;file: save_scenario_fileslct ami.csf&quot;,&quot;file: save_scenario_png_format win32&quot;,&quot;file: save_scenario_png_file ami.csf&quot;,&quot;VERSION 8.23&quot;,&quot;part: select_all&quot;,&quot;file: scenario_format enliten2&quot;,&quot;variables: select_varname_begin&quot;,&quot;pressure&quot;,&quot;velocity&quot;,&quot;variables: select_varname_end&quot;,&quot;file: save_scenario_fileslct ami.csf&quot;,&quot;file: save_scenario_png_format win32&quot;,&quot;file: save_scenario_png_file ami.csf&quot;,&quot;VERSION 8.23&quot;,&quot;part: select_all&quot;,&quot;file: scenario_format enliten2&quot;,&quot;variables: select_varname_begin&quot;,&quot;pressure&quot;,&quot;velocity&quot;,&quot;variables: select_varname_end&quot;,&quot;file: save_scenario_fileslct ami.csf&quot;,&quot;file: save_scenario_png_format win32&quot;,&quot;file: save_scenario_png_file ami.csf&quot;,&quot;file: save_scenario_project /tmp/test_scenario_project&quot;,&quot;file: save_scenario_projectslct /tmp/test_scenario_project&quot;,&quot;file: save_scenario_project /tmp/test_scenario_file&quot;,&quot;file: save_scenario_view /tmp/test_scenario_file top_view&quot;,&quot;VERSION 8.24&quot;,&quot;file: save_scenario_which_parts all&quot;,&quot;file: scenario_transient_anim 0 1 1 1&quot;,&quot;file: scenario_format enliten2&quot;,&quot;variables: select_varname_begin&quot;,&quot;variables: select_varname_end&quot;,&quot;file: save_scenario_fileslct test.csf&quot;,&quot;file: scenario_desc_begin&quot;,&quot;This project contains multiple studies from 2001&quot;)
    | ensight.file.save_scenario_project(&quot;file  /tmp/test_project&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_desc_end">
<description>
Delimit the description for a scenario project.

| A scenario project contains descriptions of the project suitable for inclusion in HTML documents.

Examples:
    | ensight.file.scenario_desc_begin(&quot;This project contains multiple studies from 2001&quot;)
    | ensight.file.save_scenario_project(&quot;file  /tmp/test_project&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_flipbook_anim">
<description>
When a scenario file/project is saved will determine if flipbook animation (if defined) will be included.

| The default is ON

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.scenario_flipbook_anim(&quot;ON&quot;)
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_format">
<description>
Sets the type of scenario format to use.

Args:
    p0:
        &#x27;type&#x27;

        * enliten1
        * enliten2

Examples:
    | ensight.file.scenario_format(&quot;enliten1&quot;)
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario.els&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_keyframe_anim">
<description>
When a scenario file/project is saved will determine if keyframe animation (if defined) will be included.

| The default is ON.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.scenario_keyframe_anim(&quot;ON&quot;)
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_trace_anim">
<description>
When a scenario file/project is saved will determine if particle trace animation (if defined) will be included.

| The default is ON.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    | ensight.file.scenario_trace_anim(&quot;ON&quot;)
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.file.scenario_transient_anim">
<description>
When a scenario csf file is saved, will determine if transient data (if available) will be included.

| The default is ON.

Args:
    p0:
        &#x27;toggle&#x27;

        * 1
        * 0
    p1:
        &#x27;start&#x27;

        * starting step number
    p2:
        &#x27;end&#x27;

        * ending step number
    p3:
        &#x27;stride&#x27;

        * step stride

Examples:
    | ensight.file.scenario_transient_anim(1,1,21,1)
    | ensight.file.save_scenario_file(&quot;/tmp/test_scenario&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
</docstrings>
