<docstrings>
<override namespace="ensight.case.add">
<description>
Add another case dataset to your current EnSight session.

| By default the new case names are called &quot;Case #&quot; where the # is the next available case # - 1 based.

Args:
    p0:
        &#x27;case_id&#x27; id of the new case (see Notes below)

Examples:
    ::

        ensight.case.create_viewport(&quot;ON&quot;)
        ensight.case.apply_context(&quot;OFF&quot;)
        ensight.case.reflect_model_in(&quot;&#x27;none&#x27;&quot;)
        ensight.case.add(&quot;Case 2&quot;)
        ensight.case.select(&quot;Case 2&quot;)
        ensight.viewport.select_begin(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.apply_context">
<description>
Specify whether to apply context from the initial case when adding another new case.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.case.create_viewport(&quot;ON&quot;)
        ensight.case.apply_context(&quot;ON&quot;)
        ensight.case.reflect_model_in(&quot;&#x27;none&#x27;&quot;)
        ensight.case.add(&quot;Case 2&quot;)
        ensight.case.select(&quot;Case 2&quot;)
        ensight.viewport.select_begin(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.create_viewport">
<description>
Specify whether to create another viewport in which to display the new case when adding a new case.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.case.create_viewport(&quot;ON&quot;)
        ensight.case.apply_context(&quot;OFF&quot;)
        ensight.case.reflect_model_in(&quot;&#x27;none&#x27;&quot;)
        ensight.case.add(&quot;Case 2&quot;)
        ensight.case.select(&quot;Case 2&quot;)
        ensight.viewport.select_begin(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.delete">
<description>
Delete the currently selected case dataset from your current EnSight session.

| By default the new case names are called &quot;Case #&quot; where the # is the next available case # - 1 based.

Args:
    p0:
        &#x27;case_id&#x27; id of the new case (see Notes below)

Examples:
    ::

        #
        # select case 2 for deletion
        #
        ensight.case.select(&quot;2&quot;)
        #
        # delete case 2
        #
        ensight.case.delete(&quot;2&quot;)
        #
        # select case 1 as current, or default
        #
        ensight.case.select(&quot;1&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.reflect_model_in">
<description>
Specify whether to apply a mirror transform when adding a new case.

| The reflection transform occurs about the point specifies via the &quot;reflect_model_origin&quot; command.

Args:
    p0:
        &#x27;option&#x27; Includes the following options:
    p1:
        &#x27;option&#x27; &#x27;none&#x27;
    p2:
        &#x27;option&#x27; &#x27;X&#x27;
    p3:
        &#x27;option&#x27; &#x27;Y&#x27;
    p4:
        &#x27;option&#x27; &#x27;Z&#x27;
    p5:
        &#x27;option&#x27; &#x27;X&#x27;&#x27;Y&#x27;

Examples:
    ::

        ensight.case.create_viewport(&quot;ON&quot;)
        ensight.case.apply_context(&quot;OFF&quot;)
        ensight.case.reflect_model_in(&quot;&#x27;Z&#x27;&quot;)
        ensight.case.add(&quot;Case 2&quot;)
        ensight.case.select(&quot;Case 2&quot;)
        ensight.viewport.select_begin(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.reflect_model_origin">
<description>
Specify the model origin about which to reflect the newly added case

| Default origin is 0., 0., 0.
| Used with the &quot;reflect_model_in&quot; command.

Args:
    p0:
        &#x27;x_comp&#x27; x component of the origin (in model coordinates) about which to reflect the new case dataset
    p1:
        &#x27;y_comp&#x27; y component of the origin (in model coordinates) about which to reflect the new case dataset
    p2:
        &#x27;z_comp&#x27; z component of the origin (in model coordinates) about which to reflect the new case dataset

Examples:
    ::

        ensight.case.create_viewport(&quot;ON&quot;)
        ensight.case.apply_context(&quot;OFF&quot;)
        ensight.case.reflect_model_in(&quot;&#x27;X&#x27;&quot;)
        ensight.case.reflect_model_in(&quot;1.0000e+00 0.0000e+00 0.0000e+00&quot;)
        ensight.case.add(&quot;Case 2&quot;)
        ensight.case.select(&quot;Case 2&quot;)
        ensight.viewport.select_begin(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.replace">
<description>
Replace the current selected case dataset with another case dataset.

| By default the new case names are called &quot;Case #&quot; where the # is the next available case # - 1 based.

Args:
    p0:
        &#x27;old_value&#x27; name of the case to be replaced
    p1:
        &#x27;new_value&#x27; name (id) of the case replacing the old string value

Examples:
    ::

        #
        # select 2nd case
        #
        ensight.case.select(&quot;Case 2&quot;)
        #
        # replace 2nd case w/2nd case
        #
        ensight.case.replace(&quot;Case 2&quot;)
        #
        # select 2nd case &#x27;Case 2&#x27;
        #
        ensight.case.select(&quot;Case 2&quot;)

    ::

        #
        # select 2nd case
        #
        ensight.case.select(&quot;Case 2&quot;)
        #
        # replace 2nd case w/3rd case
        #
        ensight.case.replace(&quot;Case 2&quot;,&quot;Case 3&quot;)
        #
        # select 2nd case
        #
        ensight.case.select(&quot;Case 3&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.select">
<description>
Specify current (active) case.

| Many operations depend on the active case, such as dataset queries.

Args:
    p0:
        &#x27;case_id&#x27; id of the active case

Examples:
    ::

        ensight.case.select(&quot;Case 2&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.update_with_time_change">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.case.viewports">
<description>
Specify which viewport in which to display the data from a case.

| The active case is modified (see &quot;case: select&quot;).

Args:
    p0:
        &#x27;vp#&#x27; viewport integer # in I[1,N] which correspond to the respective viewports in which case data is to be displayed. N is the number of active viewports.

Examples:
    ::

        #
        # Preliminary setup (for reference) - given two viewports
        #
        ensight.viewport.select_begin(0)
        ensight.view_transf.function(&quot;global&quot;)
        ensight.viewport.viewport_layout(&quot;two_horizontal&quot;)
        ensight.viewport.select_begin(1)
        #
        # Displaying a case in both viewports
        #
        ensight.case.viewports(&quot;1 2&quot;)
        #
        # Displaying a case in only the first viewport
        ensight.case.viewports(&quot;case  1&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
</docstrings>
