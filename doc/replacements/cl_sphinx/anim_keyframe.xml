<docstrings>
<override namespace="ensight.anim_keyframe.acceleration">
<description>
Toggle acceleration into/out of a keyframe.

Args:
    p0:
        &#x27;keyframe&#x27; The keyframe number to apply the acceleration
    p1:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.rotate(20,30,5)
        ensight.view_transf.translate(5,0,0)
        ensight.anim_keyframe.create_keyframe()
        #
        # accelerate out of keyframe 1
        #
        ensight.anim_keyframe.acceleration(&quot;1&quot;,&quot;ON&quot;)
        ensight.anim_keyframe.use_spline(&quot;ON&quot;)
        #
        # deaccelerate into keyframe 2
        #
        ensight.anim_keyframe.acceleration(&quot;2&quot;,&quot;ON&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.animate_transparency">
<description>
Toggles use of animated transparency.

| This command can be turned on at any time during keyframe recording.  If it is on, any transparency modifications made to parts during keyframe specification will be animated during playback.  This can be used to create video effects such as fades.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        # WARNING: following line includes OBSOLETE call (ensight.part.select_partname_begin).
        ensight.part.select_partname_begin(&quot;(CASE:Case 1)Isosurface part&quot;)
        ensight.part.modify_begin()
        # WARNING: following line includes OBSOLETE call (ensight.part.opaqueness).
        ensight.part.opaqueness(0.0)
        ensight.part.modify_end()
        ensight.anim_keyframe.create_keyframe()
        ensight.part.modify_begin()
        # WARNING: following line includes OBSOLETE call (ensight.part.opaqueness).
        ensight.part.opaqueness(1.0)
        ensight.part.modify_end()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.animate_transparency(&quot;ON&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.begin_simtime">
<description>
Sets the starting simulation time value to use during transient keyframe animations.

| The beginning/ending time step must be a valid value from the simulation.  An interpolated value cannot be used.

Args:
    p0:
        &#x27;time_value&#x27; beginning/ending simulation time

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;simulation&quot;)
        ensight.anim_keyframe.begin_simtime(4.7000e-02)
        ensight.anim_keyframe.end_simtime(1.1750e-01)
        ensight.anim_keyframe.step_simtime(2.0000e-02)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.end_simtime">
<description>
Sets the starting simulation time value to use during transient keyframe animations.

| The beginning/ending time step must be a valid value from the simulation.  An interpolated value cannot be used.

Args:
    p0:
        &#x27;time_value&#x27; beginning/ending simulation time

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;simulation&quot;)
        ensight.anim_keyframe.begin_simtime(4.7000e-02)
        ensight.anim_keyframe.end_simtime(1.1750e-01)
        ensight.anim_keyframe.step_simtime(2.0000e-02)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.begin_time_step">
<description>
Sets the starting/ending time step to use during transient keyframe animations.

Args:
    p0:
        &#x27;step_value&#x27; beginning/ending time step

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.cycle(&quot;ON&quot;)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.end_time_step">
<description>
Sets the starting/ending time step to use during transient keyframe animations.

Args:
    p0:
        &#x27;step_value&#x27; beginning/ending time step

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.cycle(&quot;ON&quot;)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.command">
<description>
Specifies a command to execute for at a particular keyframe.

| During animation playback, when keyframe &#x27;key&#x27; is encountered, its commands, if any, will be executed.  Up to five commands can be specified for a specific keyframe.  If more than five commands are needed, consider using the &quot;play: file.cmd&quot; command to play an external command file.   The command string format is the same for any command.  Also, consider using the &quot;shell: external_app&quot; command to execute an external application during animation.

Args:
    p0:
        &#x27;key_num&#x27; specifies the keyframe
    p1:
        &#x27;cmd_num&#x27; specifies the command number
    p2:
        &#x27;command&#x27; specifies the command to execute

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.command(1,1,&quot;view:&quot;,&quot;full_screen&quot;,&quot;on&quot;)
        ensight.anim_keyframe.command(1,2,&quot;view:&quot;,&quot;hidden_surface&quot;,&quot;on&quot;)
        ensight.anim_keyframe.command(2,1,&quot;play:&quot;,&quot;/usr/tmp/ensight_cmds.cmd&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.create_keyframe">
<description>
Records the current set of transformations/attributes as a keyframe.

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.sub_frames(1,2,30)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.cycle">
<description>
Toggles whether transient data will cycle during the keyframe animation.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.cycle(&quot;ON&quot;)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.delete_back_to">
<description>
Deletes keyframes back to, but not including, the keyframe specified.

Args:
    p0:
        &#x27;keyframe_num&#x27; keyframe to delete back to

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(1.5)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(5.0)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.delete_back_to(2)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.hold">
<description>
Sets the number of frames to display for a keyframe.

Args:
    p0:
        &#x27;keyframe&#x27; keyframe to control
    p1:
        &#x27;num_frames&#x27; display this many frames

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.rotate(-84.910713,-3.917774,0.000000)
        ensight.view_transf.function(&quot;global&quot;)
        ensight.view_transf.rotate(13.660716,39.395405,0.000000)
        ensight.view_transf.function(&quot;global&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.hold(1,10)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.keyframing">
<description>
Toggles keyframe animation recording.

| Toggling off keyframe animation will delete the previously saved keyframes.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.rotate(28.489212,79.540230,0.000000)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.run()
        ensight.anim_keyframe.keyframing(&quot;OFF&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.restore">
<description>
Restores/saves keyframe animation data from/to a file.

Args:
    p0:
        &#x27;filename&#x27; file name to use

Examples:
    ::

        ensight.anim_keyframe.save(&quot;./my_anim&quot;)
        ensight.anim_keyframe.restore(&quot;./my_anim&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.save">
<description>
Restores/saves keyframe animation data from/to a file.

Args:
    p0:
        &#x27;filename&#x27; file name to use

Examples:
    ::

        ensight.anim_keyframe.save(&quot;./my_anim&quot;)
        ensight.anim_keyframe.restore(&quot;./my_anim&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.run">
<description>
Plays the keyframe animation.

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.sub_frames(1,2,30)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.run_from">
<description>
Sets the first/last keyframe to use for playback.

| When creating an animation with many keyframes, it is often helpful to play back a smaller range of keyframes instead of the entire animation. The value must be between 1 and the number of keyframes.  The &quot;run_from&quot; frame must be less than or equal to the &quot;run_to&#x27; frame.

Args:
    p0:
        &#x27;keyframe_num&#x27; beginning/ending keyframe

Examples:
    ::

        ensight.anim_keyframe.run_from(2)
        ensight.anim_keyframe.run_to(3)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.run_to">
<description>
Sets the first/last keyframe to use for playback.

| When creating an animation with many keyframes, it is often helpful to play back a smaller range of keyframes instead of the entire animation. The value must be between 1 and the number of keyframes.  The &quot;run_from&quot; frame must be less than or equal to the &quot;run_to&#x27; frame.

Args:
    p0:
        &#x27;keyframe_num&#x27; beginning/ending keyframe

Examples:
    ::

        ensight.anim_keyframe.run_from(2)
        ensight.anim_keyframe.run_to(3)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.select_all_timesteps">
<description>
Selects all timesteps for the transient portion of the run.  It is the same as setting the transient start step to the beginning and the transient end step to the end.

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.select_all_timesteps()
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.specify_time_as">
<description>
Specifies whether time values during transient data animations use simulation time or time step number.

Args:
    p0:
        &#x27;method&#x27;

        * simulation
        * step

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.cycle(&quot;ON&quot;)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.step_by">
<description>
Specifies the time increment for transient data during keyframe animations.

| For each frame of the animation, the time step will be incremented by this value.  If needed and possible, interpolation will be used.

Args:
    p0:
        &#x27;increment&#x27; time step increment

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.step_simtime">
<description>
Sets the simulation time increment to use during transient keyframe animations.

| For each frame in the animation, simulation time will increment by this value.  If needed and possible, interpolation will be used.

Args:
    p0:
        &#x27;increment&#x27; simulation time increment

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.cycle(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;simulation&quot;)
        ensight.anim_keyframe.begin_simtime(4.7000e-02)
        ensight.anim_keyframe.end_simtime(1.1750e-01)
        ensight.anim_keyframe.step_simtime(2.0000e-02)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.sub_frames">
<description>
Sets the number of in-between frames between keyframes key1 and key2.

| key1 and key2 must be consecutively keyframes.

Args:
    p0:
        &#x27;key1&#x27; specifies the starting keyframe
    p1:
        &#x27;key2&#x27; specifies the ending keyframe (must be key1 + 1)
    p2:
        &#x27;subframes&#x27; specifies the number of in-between frames between key1 and key2

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.zoom(0.561365)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.sub_frames(1,2,30)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_new">
<description>
Create a new timeline.

| Is only possible if the previous (if exists) timeline does not completely span the available keyframes

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1.4 unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_time_increment(1.4)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_select">
<description>
Selects an existing timeline for editing.

Args:
    p0:
        &#x27;timeline&#x27; existing timeline to edit

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_specify_incr">
<description>
When ON specifies that a time increment is to be used for the selected timeline.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_arrive_type">
<description>
Specifies the action to be taken when the min/max time is encountered.

| Only used if &quot;anim_keyframe: timeline_specify_incr&quot; is ON

Args:
    p0:
        &#x27;action&#x27;

        * swing
        * loop

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1.4 unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_time_increment(1.4)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_delete">
<description>
Delete a timeline.

Args:
    p0:
        &#x27;timeline&#x27; timeline number to delete

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # delete the first timeline
        #
        ensight.anim_keyframe.timeline_delete(1)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_start_keyframe">
<description>
Sets the begin/end keyframes for the timeline.

Args:
    p0:
        &#x27;keyframe_num&#x27; beginning/ending keyframe for the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_end_keyframe">
<description>
Sets the begin/end keyframes for the timeline.

Args:
    p0:
        &#x27;keyframe_num&#x27; beginning/ending keyframe for the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_start_step">
<description>
Sets the start/end timeline step value if being specified.

| Only used if &quot;anim_keyframe: timeline_start/end_type specify&quot; is also set.

Args:
    p0:
        &#x27;time_value&#x27; The time value (step) for the start/end of the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # At keyframe 4 we set time step to 4.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;specify&quot;)
        ensight.anim_keyframe.timeline_end_time(4.)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_end_step">
<description>
Sets the start/end timeline step value if being specified.

| Only used if &quot;anim_keyframe: timeline_start/end_type specify&quot; is also set.

Args:
    p0:
        &#x27;time_value&#x27; The time value (step) for the start/end of the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # At keyframe 4 we set time step to 4.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;specify&quot;)
        ensight.anim_keyframe.timeline_end_time(4.)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_start_time">
<description>
Sets the start/end timeline value if being specified.

| Only used if &quot;anim_keyframe: timeline_start/end_type specify&quot; is also set.

Args:
    p0:
        &#x27;time_value&#x27; The time value (simulation) for the start/end of the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # At keyframe 4 we set time to be 40.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;specify&quot;)
        ensight.anim_keyframe.timeline_end_time(40.)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_end_time">
<description>
Sets the start/end timeline value if being specified.

| Only used if &quot;anim_keyframe: timeline_start/end_type specify&quot; is also set.

Args:
    p0:
        &#x27;time_value&#x27; The time value (simulation) for the start/end of the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # At keyframe 4 we set time to be 40.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;specify&quot;)
        ensight.anim_keyframe.timeline_end_time(40.)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_start_type">
<description>
Sets the begin/end time for the timeline.

Args:
    p0:
        &#x27;time_option&#x27;

        * use_begin
        * use_end
        * use_current
        * specify

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_end_type">
<description>
Sets the begin/end time for the timeline.

Args:
    p0:
        &#x27;time_option&#x27;

        * use_begin
        * use_end
        * use_current
        * specify

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_step_increment">
<description>
Specifies the time step increment when timeline_specify_incr is ON.

| Only used if &quot;anim_keyframe: timeline_specify_incr&quot; is ON
| See &quot;anim_keyframe: timeline_time_increment&quot; to specify the time increment in time units instead of step units.

Args:
    p0:
        &#x27;delta_step&#x27; The time step increment between frames during the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1. unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_step_increment(1.)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.timeline_time_increment">
<description>
Specifies the time increment when timeline_specify_incr is ON.

| Only used if &quot;anim_keyframe: timeline_specify_incr&quot; is ON
| See &quot;anim_keyframe: timeline_time_increment&quot; to specify the time increment in step units instead of time units.

Args:
    p0:
        &#x27;delta_time&#x27; The time increment between frames during the timeline

Examples:
    ::

        #
        # turn on keyframing and create 4 keyframes
        #
        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.create_keyframe()
        #
        # transient data (and timelines) will be used during the animation
        #
        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        #
        #
        ensight.anim_keyframe.timeline_select(1)
        #
        # the first timeline goes from keyframe 2 to 3 (i.e, no transient
        # data is used for keyframe 1 to 2)
        #
        ensight.anim_keyframe.timeline_start_keyframe(2)
        ensight.anim_keyframe.timeline_end_keyframe(3)
        #
        # At keyframe 2 the &quot;Begin&quot; (as defined in the solution time dialog)
        # time is used.  At keyframe 3 the &quot;End&quot; time is used.
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_begin&quot;)
        ensight.anim_keyframe.timeline_end_type(&quot;use_end&quot;)
        #
        # Create a new timeline and select it for editing
        #
        ensight.anim_keyframe.timeline_new()
        ensight.anim_keyframe.timeline_select(2)
        #
        # This timeline goes from keyframe 3 to 4
        #
        ensight.anim_keyframe.timeline_start_keyframe(3)
        ensight.anim_keyframe.timeline_end_keyframe(4)
        #
        # At keyframe 3 the current time will be used (which will
        # be the &quot;End&quot; time since the first timeline ends with this time
        # We do not specify the time at keyframe 4 but rather increment time
        # by 1.4 unit for each frame.  If we arrive at the begin/end time we will
        # &quot;swing&quot;
        #
        ensight.anim_keyframe.timeline_start_type(&quot;use_current&quot;)
        ensight.anim_keyframe.timeline_specify_incr(&quot;ON&quot;)
        ensight.anim_keyframe.timeline_time_increment(1.4)
        ensight.anim_keyframe.timeline_arrive_type(&quot;swing&quot;)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.use_interactive_parts">
<description>
Toggles use of animated isosurfaces or clip planes.

| This command can be turned on at any time during keyframe recording.  If it is on, any isosurfaces or clips that were interactively changed during recording will be animated.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        # WARNING: following line includes OBSOLETE call (ensight.part.select_partname_begin).
        ensight.part.select_partname_begin(&quot;(CASE:Case 1)Isosurface part&quot;)
        ensight.part.modify_begin()
        ensight.isos.value(9.9000e-01)
        ensight.part.modify_end()
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_interactive_parts(&quot;ON&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.use_spline">
<description>
Enable spline interpolation for keyframe animation translations and look at/from changes.

| You must have more than 2 keyframes for spline interpolation.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.keyframing(&quot;ON&quot;)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.translate(5,0,0)
        ensight.anim_keyframe.create_keyframe()
        ensight.view_transf.translate(0,5,0)
        ensight.anim_keyframe.create_keyframe()
        ensight.anim_keyframe.use_spline(&quot;ON&quot;)
        ensight.anim_keyframe.acceleration(&quot;3&quot;,&quot;ON&quot;)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.anim_keyframe.use_transient_data">
<description>
Toggles whether transient data will be used during the keyframe animation.

| When using transient data, each frame (keyframes and in-betweens) will use the next transient time value.

Args:
    p0:
        &#x27;toggle&#x27;

        * ON
        * OFF

Examples:
    ::

        ensight.anim_keyframe.use_transient_data(&quot;ON&quot;)
        ensight.anim_keyframe.specify_time_as(&quot;step&quot;)
        ensight.anim_keyframe.step_by(2.0000e+00)
        ensight.anim_keyframe.begin_time_step(2)
        ensight.anim_keyframe.end_time_step(15)
        ensight.anim_keyframe.run()

Returns:
    zero on success, non-zero on error
</description>
</override>
</docstrings>
