<docstrings>
<override namespace="ensight.isos.anim_delta">
<description>
This command has not yet been documented.

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.begin">
<description>
Delimit the modifications for iso-surface attributes

| These commands are used to set the attributes for a isosurface part creation.

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.end">
<description>
Delimit the modifications for iso-surface attributes

| These commands are used to set the attributes for a isosurface part creation.

Examples:

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.component">
<description>
The isosurface algorithim works only on scalar variables.  For a vector, this command specifies how a scalar will be created from the vector.

| The scale factors apply only if the isosurface variable is a vector.
| Usually used with a scale factor of 0 or 1. in order to use only a component of a vector. 
| A special condition exists when x_scale = y_scale = z_scale = 0, in which case the vector magnitude is used. 
| The default is x_scale = y_scale = z_scale = 0.  

Args:
    p0:
        &#x27;x_scale&#x27; factor to scale the x, y, z components of the vector
    p1:
        &#x27;y_scale&#x27; factor to scale the x, y, z components of the vector
    p2:
        &#x27;z_scale&#x27; factor to scale the x, y, z components of the vector

Examples:
    | # WARNING: following line includes OBSOLETE call (ensight.variables.select_varname_begin).
    | ensight.variables.select_varname_begin(&quot;Stress&quot;,&quot;variables: select_varname_end&quot;,&quot;function: save /usr/tmp/mystress.pal&quot;,&quot;variables: select_varname_begin&quot;,&quot;Density&quot;,&quot;Energy&quot;,&quot;variables: select_varname_end&quot;,&quot;function: save /usr/tmp/myshuttlescalars.pal&quot;,&quot;function: save_all /usr/tmp/allmy.pal&quot;,&quot;function: save_current_case /usr/tmp/allmy.pal&quot;,&quot;function: palette N_temperature&quot;,&quot;function: type continuous&quot;,&quot;function: modify_begin&quot;,&quot;function: scale quadratic&quot;,&quot;function: edit_level 2&quot;,&quot;function: value 1.9373e+00&quot;,&quot;function: edit_level 3&quot;,&quot;function: value 7.7191e+00&quot;,&quot;function: edit_level 4&quot;,&quot;function: value 1.7356e+01&quot;,&quot;function: edit_level 5&quot;,&quot;function: value 3.0846e+01&quot;,&quot;function: edit_level 6&quot;,&quot;function: value 4.8192e+01&quot;,&quot;function: modify_end&quot;,&quot;function: select_default&quot;,&quot;function: #_of_levels 4&quot;,&quot;function: modify_begin&quot;,&quot;function: edit_level 1&quot;,&quot;function: value 1.0000e-02&quot;,&quot;function: edit_level 2&quot;,&quot;function: value 1.6071e+01&quot;,&quot;function: edit_level 3&quot;,&quot;function: value 3.2131e+01&quot;,&quot;function: edit_level 4&quot;,&quot;function: value 4.8192e+01&quot;,&quot;function: modify_end&quot;,&quot;function: set_palette_to_minmax&quot;,&quot;function: palette N_temperature&quot;,&quot;function: type banded&quot;,&quot;function: palette N_temperature&quot;,&quot;function: modify_begin&quot;,&quot;function: #_of_levels 6&quot;,&quot;function: edit_level 2&quot;,&quot;function: value 9.6464e+00&quot;,&quot;function: edit_level 3&quot;,&quot;function: value 1.9283e+01&quot;,&quot;function: edit_level 4&quot;,&quot;function: value 2.8919e+01&quot;,&quot;function: edit_level 5&quot;,&quot;function: value 3.8556e+01&quot;,&quot;function: edit_level 6&quot;,&quot;function: value 4.8192e+01&quot;,&quot;function: edit_level 1&quot;,&quot;function: RGB 5.0000e-01 0.0000e+00 1.0000e+00&quot;,&quot;function: edit_level 2&quot;,&quot;function: RGB 0.0000e+00 0.0000e+00 1.0000e+00&quot;,&quot;function: edit_level 3&quot;,&quot;function: RGB 0.0000e+00 1.0000e+00 1.0000e+00&quot;,&quot;function: edit_level 4&quot;,&quot;function: RGB 0.0000e+00 1.0000e+00 0.0000e+00&quot;,&quot;function: edit_level 5&quot;,&quot;function: RGB 1.0000e+00 1.0000e+00 0.0000e+00&quot;,&quot;function: edit_level 6&quot;,&quot;function: RGB 1.0000e+00 0.0000e+00 0.0000e+00&quot;,&quot;function: modify_end&quot;,&quot;isos: begin&quot;,&quot;isos: variable temperature&quot;,&quot;isos: value 1.1&quot;,&quot;isos: type isosurface&quot;,&quot;isos: end&quot;,&quot;isos: create&quot;,&quot;isos: begin&quot;,&quot;isos: variable temperature&quot;,&quot;isos: value 1.1&quot;,&quot;isos: type isosurface&quot;,&quot;isos: end&quot;,&quot;isos: create&quot;,&quot;part: select_begin&quot;,&quot; 3&quot;)
    | #
    | # Use the y_component of the vector
    | #
    | ensight.part.modify_begin()
    | ensight.isos.component(0,1,0)
    | ensight.part.modify_end()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.constraint">
<description>
Set the bounding condition for an isovolume.

| Is used only when &quot;isos: type&quot; is set to isovolume.  

Args:
    p0:
        &#x27;isovolume_bound&#x27;

        * low
        * high
        * band

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isovolume&quot;)
    | ensight.isos.constraint(&quot;band&quot;)
    | ensight.isos.min(1.)
    | ensight.isos.max(2.)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.create">
<description>
Create a isosurface part with the currently defined attributes using  the currently selected parts as parent parts.

| The isosurface part is created using the currently selected parts as parents.  
| The isosurface part is created using the currently set isosurface attributes.

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isovolume&quot;)
    | ensight.isos.constraint(&quot;band&quot;)
    | ensight.isos.min(1.)
    | ensight.isos.max(2.)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.create_delta">
<description>
Specify delta between isosurface instances.

| Requires the use of the isos: number_to_create &lt;instances&gt; command in conjunction with this command.  

Args:
    p0:
        &#x27;delta&#x27; the delta value between multiple instances of an isosurface.

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isosurface&quot;)
    | ensight.isos.create_delta(0.5)
    | ensight.isos.number_to_create(10)
    | ensight.isos.value(1.76)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.interactive_auto_delta">
<description>
Set the isosurface animation delta for use when surface is set to interactive mode via &quot;isos: interactive_type auto/auto_cycle&quot;.

| The currently selected part must be an isosurface part. Not used for isovolume parts.

Args:
    p0:
        &#x27;delta&#x27; delta value that will be added to the isosurface value for each refresh of the screen

Examples:
    | ensight.part.select_begin(3)
    | ensight.isos.interactive_type(&quot;auto&quot;)
    | ensight.isos.interactive_rangemin(0.)
    | ensight.isos.interactive_rangemax(5.)
    | ensight.isos.interactive_auto_delta(.5)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.interactive_rangemin">
<description>
Set the minimum/maximum isosurface value when isosurface is in an interactive mode.

| The currently selected part must be an isosurface part.  Not used for isovolume parts.

Args:
    p0:
        &#x27;min_range&#x27; minimum isosurface value when displaying interactive
    p1:
        &#x27;max_range&#x27; maximum isosurface value when displaying interactive

Examples:
    | ensight.part.select_begin(3)
    | ensight.isos.interactive_type(&quot;auto&quot;)
    | ensight.isos.interactive_rangemin(0.)
    | ensight.isos.interactive_rangemax(5.)
    | ensight.isos.interactive_auto_delta(.5)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.interactive_rangemax">
<description>
Set the minimum/maximum isosurface value when isosurface is in an interactive mode.

| The currently selected part must be an isosurface part.  Not used for isovolume parts.

Args:
    p0:
        &#x27;min_range&#x27; minimum isosurface value when displaying interactive
    p1:
        &#x27;max_range&#x27; maximum isosurface value when displaying interactive

Examples:
    | ensight.part.select_begin(3)
    | ensight.isos.interactive_type(&quot;auto&quot;)
    | ensight.isos.interactive_rangemin(0.)
    | ensight.isos.interactive_rangemax(5.)
    | ensight.isos.interactive_auto_delta(.5)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.interactive_type">
<description>
Specify the interactive setting for an isosurface.

| The min and max values are constrained via the interactive_rangemin/max commands. Only isosurfaces can be in interactive mode (i.e., isovolumes cannot).

Args:
    p0:
        &#x27;type&#x27;

        * off
        * manual
        * auto
        * auto_cycle

Examples:
    | ensight.part.select_begin(3)
    | ensight.isos.interactive_type(&quot;auto&quot;)
    | ensight.isos.interactive_rangemin(0.)
    | ensight.isos.interactive_rangemax(5.)
    | ensight.isos.interactive_auto_delta(.5)

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.min">
<description>
Set the min/max constraint values for an isovolume.

| Is used only when &quot;isos: type&quot; is set to isovolume.  

Args:
    p0:
        &#x27;min_value&#x27; minimum iso constraint
    p1:
        &#x27;max_value&#x27; maximum iso constraint

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isovolume&quot;)
    | ensight.isos.constraint(&quot;band&quot;)
    | ensight.isos.min(1.)
    | ensight.isos.max(2.)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.max">
<description>
Set the min/max constraint values for an isovolume.

| Is used only when &quot;isos: type&quot; is set to isovolume.  

Args:
    p0:
        &#x27;min_value&#x27; minimum iso constraint
    p1:
        &#x27;max_value&#x27; maximum iso constraint

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isovolume&quot;)
    | ensight.isos.constraint(&quot;band&quot;)
    | ensight.isos.min(1.)
    | ensight.isos.max(2.)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.number_to_create">
<description>
Specify the number of instances of an isosurface to create.

| Requires the use of the isos: create_delta &lt;delta&gt; command in conjunction with this command.  

Args:
    p0:
        &#x27;instances&#x27; number of instances to create.

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.type(&quot;isosurface&quot;)
    | ensight.isos.create_delta(0.5)
    | ensight.isos.number_to_create(10)
    | ensight.isos.value(1.76)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.select_default">
<description>
Sets the target to the default settings for subsequent attribute modifications.

Examples:
    | ensight.isos.select_default()
    | ensight.part.modify_begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.value(1.0)
    | ensight.part.modify_end()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.type">
<description>
Set the isosurface part to represent a surface or a volume.

| The default is isosurface. 

Args:
    p0:
        &#x27;iso_type&#x27;

        * isosurface
        * isovolume 

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.value(1.1)
    | ensight.isos.type(&quot;isovolume&quot;)
    | ensight.isos.constraint(&quot;band&quot;)
    | ensight.isos.min(1.)
    | ensight.isos.max(2.)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.value">
<description>
Specify the isosurface value.

| Is not used for isovolumes.
| For a vector:  If the following is defined:
| X_var = The vector X component
| Y_var = The vector Y component
| Z_var = The vector Z component
| X_com = The X vector scale factor as specified with &quot;isos: component&quot;
| Y_com = The Y vector scale factor as specified with &quot;isos: component&quot;
| Z_com = The Z vector scale factor as specified with &quot;isos: component&quot;
| then the isosurface (or line) created represents a uniform scalar value where
|       X_var*X_com + Y_var*Y_com + Z_var*Z_com = iso_value,
| except in the special case where X_com = Y_com = Z_com = 0. in which case the isosurface (or line) created represents a uniform scalar value where
|       sqrt(X_var*X_var + Y_var*Y_var + Z_var*Z_var) = iso_value.

Args:
    p0:
        &#x27;iso_value&#x27; iso value

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.value(1.1)
    | ensight.isos.type(&quot;isosurface&quot;)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
<override namespace="ensight.isos.variable">
<description>
Set the isosurface variable.

| A variable must be active before it can be used for isosurfaces.  

Args:
    p0:
        &#x27;var_name&#x27; name of an active variable

Examples:
    | ensight.isos.begin()
    | ensight.isos.variable(&quot;temperature&quot;)
    | ensight.isos.value(1.1)
    | ensight.isos.type(&quot;isosurface&quot;)
    | ensight.isos.end()
    | ensight.isos.create()

Returns:
    zero on success, non-zero on error
</description>
</override>
</docstrings>
